<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Kiran Gangadharan</title>
    <link>http://kirang.in/categories/programming/</link>
    <description>Recent content in Programming on Kiran Gangadharan</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Dec 2018 00:00:00 +0530</lastBuildDate>
    <atom:link href="http://kirang.in/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Road to a Masterless Multinode Distributed System in Elixir</title>
      <link>http://kirang.in/post/the-road-to-masterless-multinode-distributed-system-in-elixir/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0530</pubDate>
      <guid>http://kirang.in/post/the-road-to-masterless-multinode-distributed-system-in-elixir/</guid>
      <description>&lt;p&gt;My first conference talk presented at &lt;a href=&#34;https://functionalconf.com/&#34;&gt;Functional Conf 2018&lt;/a&gt;! Yay!&lt;/p&gt;&#xA;&lt;p&gt;I co-presented this with my colleague &lt;a href=&#34;https://twitter.com/yudistrange&#34;&gt;Udit&lt;/a&gt;. This talk is about our journey building a masterless multi-node distributed system in Elixir. It covers the problems we faced, how we dealt with them and the lessons learnt in the process.&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;I&amp;rsquo;m grateful to &lt;a href=&#34;https://nilenso.com/&#34;&gt;nilenso&lt;/a&gt; for providing me with the opportunity to work on this project and give this talk. If this type of work sounds interesting to you, &lt;a href=&#34;https://nilenso.com/careers.html&#34;&gt;talk to us&lt;/a&gt;!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating a simple stack-based language in Clojure</title>
      <link>http://kirang.in/post/creating-a-simple-stack-based-language-in-clojure/</link>
      <pubDate>Mon, 04 Apr 2016 00:00:00 +0530</pubDate>
      <guid>http://kirang.in/post/creating-a-simple-stack-based-language-in-clojure/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s look at how to build a simple stack-based language in Clojure. First, this&#xA;is how the input would look like:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;push 8&#xA;push 4&#xA;+&#xA;push 3&#xA;*&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;This would be equivalent to (in infix notation):&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(8 + 4) * 3&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Here is a simple parser-cum-evaluator for the above input:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;10&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;11&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;12&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;13&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;14&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;15&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;parse-eval&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;stack&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;Parse and Evaluate the line sent and push result to stack if necessary.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#ca9ee6&#34;&gt;let &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;cmd&lt;/span&gt; (&lt;span style=&#34;color:#8caaee&#34;&gt;clojure.string/split&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f2d5cf&#34;&gt;fname&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;cmd&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f2d5cf&#34;&gt;arg&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;second &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;cmd&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f2d5cf&#34;&gt;digit?&lt;/span&gt; &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#8caaee&#34;&gt;Character/isDigit&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;%&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f2d5cf&#34;&gt;op?&lt;/span&gt; &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;some &lt;/span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;x&lt;/span&gt;] (&lt;span style=&#34;color:#99d1db&#34;&gt;= &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;%&lt;/span&gt;)) [&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f2d5cf&#34;&gt;make-fn&lt;/span&gt; &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;resolve &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;symbol &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;%&lt;/span&gt;))]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#ca9ee6&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;and &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;nil? &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;arg&lt;/span&gt;) (&lt;span style=&#34;color:#8caaee&#34;&gt;op?&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;fname&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; If operator, apply it to arguments in stack&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (&lt;span style=&#34;color:#99d1db&#34;&gt;conj &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;drop &lt;/span&gt;&lt;span style=&#34;color:#ef9f76&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;stack&lt;/span&gt;) (&lt;span style=&#34;color:#99d1db&#34;&gt;apply &lt;/span&gt;(&lt;span style=&#34;color:#8caaee&#34;&gt;make-fn&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;fname&lt;/span&gt;) (&lt;span style=&#34;color:#99d1db&#34;&gt;take &lt;/span&gt;&lt;span style=&#34;color:#ef9f76&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;stack&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (&lt;span style=&#34;color:#ca9ee6&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;and &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;= &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;keyword &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;fname&lt;/span&gt;) &lt;span style=&#34;color:#a6d189&#34;&gt;:push&lt;/span&gt;) (&lt;span style=&#34;color:#8caaee&#34;&gt;digit?&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;arg&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; If push command, add value to stack&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#99d1db&#34;&gt;conj &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;stack&lt;/span&gt; (&lt;span style=&#34;color:#8caaee&#34;&gt;Integer/parseInt&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;arg&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#8caaee&#34;&gt;throw&lt;/span&gt; (&lt;span style=&#34;color:#8caaee&#34;&gt;Exception.&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;Error while parsing&amp;#34;&lt;/span&gt;))))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Now we need to read the program mentioned above from a file and send it to the above&#xA;function:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using records in Clojure</title>
      <link>http://kirang.in/post/using-records-in-clojure/</link>
      <pubDate>Wed, 24 Feb 2016 00:00:00 +0530</pubDate>
      <guid>http://kirang.in/post/using-records-in-clojure/</guid>
      <description>&lt;h3 id=&#34;when-to-use&#34;&gt;When to use:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Fixed set of keys in multiple map instances&lt;/li&gt;&#xA;&lt;li&gt;Defer until you have protocols&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;pros&#34;&gt;Pros&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Created quickly&lt;/li&gt;&#xA;&lt;li&gt;Less memory overhead&lt;/li&gt;&#xA;&lt;li&gt;Key lookup performance same/faster when compared to equivalent hash-maps&lt;/li&gt;&#xA;&lt;li&gt;Can implement protocols&lt;/li&gt;&#xA;&lt;li&gt;Generated class has a type that can be used to dispatch methods using multimethod&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;cons&#34;&gt;Cons&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cannot be used as a function like hash-maps can&lt;/li&gt;&#xA;&lt;li&gt;Cannot be compared to an equivalent hash-map in terms of identity&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Implementing Norvig&#39;s Spelling Corrector in Clojure</title>
      <link>http://kirang.in/post/implementing-norvigs-spelling-corrector-in-clojure/</link>
      <pubDate>Wed, 03 Feb 2016 00:00:00 +0530</pubDate>
      <guid>http://kirang.in/post/implementing-norvigs-spelling-corrector-in-clojure/</guid>
      <description>&lt;p&gt;I wanted to try something small in Clojure as an exercise, and so I decided to&#xA;implement &lt;a href=&#34;http://norvig.com/spell-correct.html&#34;&gt;Norvig&amp;rsquo;s spelling corrector&lt;/a&gt;&#xA;(which is an elegant Python implementation btw). Being a clojure newbie, it was a bit frustating to&#xA;figure out an idiomatic solution, but I think I&amp;rsquo;ve managed a decent&#xA;implementation. It was fun! :)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;10&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;11&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;12&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;13&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;14&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;15&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;16&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;17&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;18&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;19&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;20&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;21&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;22&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;23&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;24&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;25&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;26&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;27&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;28&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;29&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;30&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;31&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;32&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;33&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;34&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;35&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;36&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;37&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;38&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;39&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;40&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;41&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;42&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;43&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;44&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;45&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;46&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;47&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;48&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;49&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;50&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;51&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;52&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;53&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;54&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;55&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;56&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;57&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;def &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;alphabets&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;abcdefghijklmnopqrstuvwxyz&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;words&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;text&lt;/span&gt;] (&lt;span style=&#34;color:#99d1db&#34;&gt;re-seq &lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;[a-zA-Z]+&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;text&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;train&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;features&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#99d1db&#34;&gt;reduce &lt;/span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (&lt;span style=&#34;color:#ca9ee6&#34;&gt;let &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;lword&lt;/span&gt; (&lt;span style=&#34;color:#8caaee&#34;&gt;clojure.string/lower-case&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f2d5cf&#34;&gt;value&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;get &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;lword&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt;)]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              (&lt;span style=&#34;color:#99d1db&#34;&gt;assoc &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;lword&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;+ &lt;/span&gt;&lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;value&lt;/span&gt;)))) {} &lt;span style=&#34;color:#f2d5cf&#34;&gt;features&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;def &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;nwords&lt;/span&gt; (&lt;span style=&#34;color:#8caaee&#34;&gt;train&lt;/span&gt; (&lt;span style=&#34;color:#8caaee&#34;&gt;words&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;slurp &lt;/span&gt;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;data.txt&amp;#34;&lt;/span&gt;))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; splits&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;get-splits&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt;] (&lt;span style=&#34;color:#99d1db&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;conj &lt;/span&gt;[] (&lt;span style=&#34;color:#99d1db&#34;&gt;subs &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;%&lt;/span&gt;) (&lt;span style=&#34;color:#99d1db&#34;&gt;subs &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;%&lt;/span&gt;)) (&lt;span style=&#34;color:#99d1db&#34;&gt;range &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;inc &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;count &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt;)))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; deletes&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;get-deletes&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#99d1db&#34;&gt;map &lt;/span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[[&lt;span style=&#34;color:#f2d5cf&#34;&gt;p1&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;p2&lt;/span&gt;]] (&lt;span style=&#34;color:#99d1db&#34;&gt;apply str &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;concat &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;p1&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;p2&lt;/span&gt;)))) &lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; transposes&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;get-transposes&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#99d1db&#34;&gt;map &lt;/span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[[&lt;span style=&#34;color:#f2d5cf&#34;&gt;p1&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;p2&lt;/span&gt;]] (&lt;span style=&#34;color:#99d1db&#34;&gt;apply str &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;concat &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;p1&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;str &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;second &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;p2&lt;/span&gt;)) (&lt;span style=&#34;color:#99d1db&#34;&gt;str &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;p2&lt;/span&gt;)) (&lt;span style=&#34;color:#99d1db&#34;&gt;drop &lt;/span&gt;&lt;span style=&#34;color:#ef9f76&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;p2&lt;/span&gt;)))) &lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; replaces&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;get-replaces&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#8caaee&#34;&gt;flatten&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;map &lt;/span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[[&lt;span style=&#34;color:#f2d5cf&#34;&gt;p1&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;p2&lt;/span&gt;]] (&lt;span style=&#34;color:#99d1db&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;apply str &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;concat &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;p1&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;str &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;%&lt;/span&gt;) (&lt;span style=&#34;color:#99d1db&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;p2&lt;/span&gt;))) &lt;span style=&#34;color:#f2d5cf&#34;&gt;alphabets&lt;/span&gt;)) &lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; inserts&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;get-inserts&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#8caaee&#34;&gt;flatten&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;map &lt;/span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[[&lt;span style=&#34;color:#f2d5cf&#34;&gt;p1&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;p2&lt;/span&gt;]] (&lt;span style=&#34;color:#99d1db&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;apply str &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;concat &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;p1&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;str &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;%&lt;/span&gt;) &lt;span style=&#34;color:#f2d5cf&#34;&gt;p2&lt;/span&gt;)) &lt;span style=&#34;color:#f2d5cf&#34;&gt;alphabets&lt;/span&gt;)) &lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;edits1&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#ca9ee6&#34;&gt;let &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt; (&lt;span style=&#34;color:#8caaee&#34;&gt;get-splits&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt;)]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#99d1db&#34;&gt;distinct &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;concat &lt;/span&gt;(&lt;span style=&#34;color:#8caaee&#34;&gt;get-deletes&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      (&lt;span style=&#34;color:#8caaee&#34;&gt;get-transposes&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      (&lt;span style=&#34;color:#8caaee&#34;&gt;get-replaces&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      (&lt;span style=&#34;color:#8caaee&#34;&gt;get-inserts&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;)))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;known-edits2&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#8caaee&#34;&gt;distinct&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   (&lt;span style=&#34;color:#8caaee&#34;&gt;flatten&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#99d1db&#34;&gt;map &lt;/span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;e1w&lt;/span&gt;] (&lt;span style=&#34;color:#99d1db&#34;&gt;reduce &lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;contains? &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;nwords&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;%2&lt;/span&gt;) (&lt;span style=&#34;color:#99d1db&#34;&gt;conj &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;%2&lt;/span&gt;) &lt;span style=&#34;color:#f2d5cf&#34;&gt;%&lt;/span&gt;) [] (&lt;span style=&#34;color:#8caaee&#34;&gt;edits1&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;e1w&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       (&lt;span style=&#34;color:#8caaee&#34;&gt;edits1&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt;)))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;known&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;words&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#99d1db&#34;&gt;reduce &lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;contains? &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;nwords&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;%2&lt;/span&gt;) (&lt;span style=&#34;color:#99d1db&#34;&gt;conj &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;%2&lt;/span&gt;) &lt;span style=&#34;color:#f2d5cf&#34;&gt;%&lt;/span&gt;) [] &lt;span style=&#34;color:#f2d5cf&#34;&gt;words&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;correct&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#ca9ee6&#34;&gt;let &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;candidates&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;or &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;seq &lt;/span&gt;(&lt;span style=&#34;color:#8caaee&#34;&gt;known&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt;]))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       (&lt;span style=&#34;color:#99d1db&#34;&gt;seq &lt;/span&gt;(&lt;span style=&#34;color:#8caaee&#34;&gt;edits1&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       (&lt;span style=&#34;color:#99d1db&#34;&gt;seq &lt;/span&gt;(&lt;span style=&#34;color:#8caaee&#34;&gt;known-edits2&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       [&lt;span style=&#34;color:#f2d5cf&#34;&gt;word&lt;/span&gt;])]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#99d1db&#34;&gt;apply &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;partial max-key &lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;get &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;nwords&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt;)) &lt;span style=&#34;color:#f2d5cf&#34;&gt;candidates&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; (correct &amp;#34;speling&amp;#34;) ; =&amp;gt; spelling&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;You can find the source code with tests&#xA;&lt;a href=&#34;https://github.com/kirang89/spcorr&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rationals vs Decimals in Clojure</title>
      <link>http://kirang.in/post/rationals-vs-decimals-clojure/</link>
      <pubDate>Sat, 30 Jan 2016 00:00:00 +0530</pubDate>
      <guid>http://kirang.in/post/rationals-vs-decimals-clojure/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Use rationals if accuracy is your main concern. For example, operations on&#xA;decimals are not associative.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;4&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;let &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;1.0&lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;e50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f2d5cf&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;-1.0&lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;e50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f2d5cf&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;17.0&lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;e00&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#99d1db&#34;&gt;= &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;+ &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;+ &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;b&lt;/span&gt;) &lt;span style=&#34;color:#f2d5cf&#34;&gt;c&lt;/span&gt;) (&lt;span style=&#34;color:#99d1db&#34;&gt;+ &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;a&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;+ &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;c&lt;/span&gt;)))) &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;; =&amp;gt; false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;From the above example, one can infer that decimals are subjected to Floating&#xA;Point corruption. You can find more examples &lt;a href=&#34;https://stackoverflow.com/questions/2100490/floating-point-inaccuracy-examples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Rationals are slower in terms of operations on them when compared to&#xA;decimals. There is an overhead involved when doing operations on rationals.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Concurrent Prime Sieve in Clojure</title>
      <link>http://kirang.in/post/concurrent-prime-sieve-in-clojure/</link>
      <pubDate>Mon, 28 Dec 2015 00:00:00 +0530</pubDate>
      <guid>http://kirang.in/post/concurrent-prime-sieve-in-clojure/</guid>
      <description>&lt;p&gt;While watching the&#xA;&lt;a href=&#34;https://www.youtube.com/watch?v=f6kdp27TYZs&#34;&gt;Go Concurrency Patterns talk&lt;/a&gt; by&#xA;Rob Pike, I came across a&#xA;&lt;a href=&#34;http://tinyurl.com/gosieve&#34;&gt;Concurrent Prime Sieve implementation in Go&lt;/a&gt; which&#xA;Rob had claimed to be beautiful concurrent code. Curious enough, I checked out&#xA;the example and decided on implementing it in Clojure.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s begin by creating an infinite sequence generator(starting from 2):&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;5&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;num-generator&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;out&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#8caaee&#34;&gt;go&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#ca9ee6&#34;&gt;loop &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;2&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (&lt;span style=&#34;color:#8caaee&#34;&gt;&amp;gt;!!&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;n&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (&lt;span style=&#34;color:#8caaee&#34;&gt;recur&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;inc &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;n&lt;/span&gt;)))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;go&lt;/code&gt; block ensures that the body is run on a seperate thread. I used the&#xA;blocking put instead of the parking one to only generate a number when required&#xA;by the program. Had I used the parking put &lt;code&gt;&amp;gt;!&lt;/code&gt; instead, we would&amp;rsquo;ve encountered&#xA;the &lt;code&gt;OutOfMemory&lt;/code&gt; exception while executing the function.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Useful AWK one-liners</title>
      <link>http://kirang.in/post/useful-awk-one-liners/</link>
      <pubDate>Tue, 15 Dec 2015 00:00:00 +0530</pubDate>
      <guid>http://kirang.in/post/useful-awk-one-liners/</guid>
      <description>&lt;p&gt;While reading&#xA;&lt;a href=&#34;http://shop.oreilly.com/product/9780596515171.do&#34;&gt;Masterminds of Programming&lt;/a&gt; I&#xA;came across the interview with &lt;a href=&#34;https://en.wikipedia.org/wiki/Alfred_Aho&#34;&gt;Alfred Aho&lt;/a&gt; and his thoughts about the design of&#xA;the AWK programming language. I&amp;rsquo;ve always known about the existence of awk, but&#xA;have never really felt the urge to dive in. Then I came across this sentence:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;If I had to choose a word to describe our centering forces in language design,&#xA;I&amp;rsquo;d say Kernighan emphasized ease of learning; Weiberger, soundness of&#xA;implementation; and I, utility. I think AWK has all three of these properties.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fetching data with a raw SQL query in SQLAlchemy</title>
      <link>http://kirang.in/post/fetching-data-with-raw-sql-query-in-sqlalchemy/</link>
      <pubDate>Sun, 22 Nov 2015 00:00:00 +0530</pubDate>
      <guid>http://kirang.in/post/fetching-data-with-raw-sql-query-in-sqlalchemy/</guid>
      <description>&lt;p&gt;The following is a sane way of fetching data using a raw SQL query in&#xA;SQLAlchemy:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;10&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;11&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;12&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;13&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;14&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;15&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;16&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;query &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#39;select * from books where author=:author&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81c8be&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;sqlalchemy&lt;/span&gt; &lt;span style=&#34;color:#81c8be&#34;&gt;import&lt;/span&gt; text&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt; yoursession&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;execute(text(query), {&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#39;author&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#39;Neil Degrasse Tyson&amp;#39;&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81c8be&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;collections&lt;/span&gt; &lt;span style=&#34;color:#81c8be&#34;&gt;import&lt;/span&gt; namedtuple&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Book &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt; namedtuple(&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#39;Book&amp;#39;&lt;/span&gt;, result&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;keys())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;# Create a namedtuple for each row&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;books &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt; [Record(&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;*&lt;/span&gt;r) &lt;span style=&#34;color:#ca9ee6&#34;&gt;for&lt;/span&gt; r &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;in&lt;/span&gt; res&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;fetchall()]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;# Using namedtuple allows you to access attributes using the&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;# dot operator instead of relying on indexes&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;in&lt;/span&gt; books:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#99d1db&#34;&gt;print&lt;/span&gt;(book&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;name, book&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;author)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Different applications of reduce in Clojure</title>
      <link>http://kirang.in/post/different-applications-of-reduce-in-clojure/</link>
      <pubDate>Sun, 15 Nov 2015 00:00:00 +0530</pubDate>
      <guid>http://kirang.in/post/different-applications-of-reduce-in-clojure/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve just started learning Clojure using&#xA;&lt;a href=&#34;http://www.braveclojure.com/&#34;&gt;Clojure for the Brave and True&lt;/a&gt; and solving&#xA;problems on &lt;a href=&#34;https://www.4clojure.com/&#34;&gt;4Clojure&lt;/a&gt;. While doing so, I&amp;rsquo;ve noticed&#xA;that a lot of problems that seem tricky can be quickly solved using &lt;code&gt;clojure.core/reduce&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This post is an effort to document some snippets to demonstrate how useful &lt;code&gt;reduce&lt;/code&gt; can be.&lt;/p&gt;&#xA;&lt;h3 id=&#34;reverse-a-collectiona-idsec-1-namesec-1a&#34;&gt;Reverse a collection&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;5&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;6&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;myreverse&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#99d1db&#34;&gt;reduce conj &lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;#39;&lt;/span&gt;() &lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#8caaee&#34;&gt;myreverse&lt;/span&gt; &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;4&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; (4 3 2 1)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;find-frequency-of-words-in-a-stringa-idsec-2-namesec-2a&#34;&gt;Find frequency of words in a string&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;5&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;6&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;7&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;8&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;9&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;freq&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;str&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#99d1db&#34;&gt;reduce &lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;assoc &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;%1&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;%2&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;inc &lt;/span&gt;(&lt;span style=&#34;color:#8caaee&#34;&gt;%1&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;%2&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;0&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          {}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (&lt;span style=&#34;color:#8caaee&#34;&gt;clojure.string/split&lt;/span&gt; &lt;span style=&#34;color:#99d1db&#34;&gt;str &lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;\s&amp;#34;&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#8caaee&#34;&gt;freq&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;Hey there! I am the hey man! I like to hey the people&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; {&amp;#34;like&amp;#34; 1, &amp;#34;people&amp;#34; 1, &amp;#34;man!&amp;#34; 1, &amp;#34;am&amp;#34; 1, &amp;#34;Hey&amp;#34; 1,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;;  &amp;#34;hey&amp;#34; 2, &amp;#34;there!&amp;#34; 1, &amp;#34;I&amp;#34; 2, &amp;#34;to&amp;#34; 1, &amp;#34;the&amp;#34; 2}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;transform-all-values-in-a-mapa-idsec-3-namesec-3a&#34;&gt;Transform all values in a map&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;5&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;6&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;reduce &lt;/span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;new-map&lt;/span&gt; [&lt;span style=&#34;color:#99d1db&#34;&gt;key &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;val&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (&lt;span style=&#34;color:#99d1db&#34;&gt;assoc &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;new-map&lt;/span&gt; &lt;span style=&#34;color:#99d1db&#34;&gt;key &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;inc &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;val&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#a6d189&#34;&gt;:lat&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;50.23&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;:lng&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;24.21&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; {:lat 51.23, :lng 25.21}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;using-reduce-to-filter-out-values-in-mapa-idsec-4-namesec-4a&#34;&gt;Using reduce to filter out values in map&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;5&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;6&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;7&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;8&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;reduce &lt;/span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;new-map&lt;/span&gt; [&lt;span style=&#34;color:#99d1db&#34;&gt;key &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;val&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (&lt;span style=&#34;color:#ca9ee6&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;&amp;gt; val &lt;/span&gt;&lt;span style=&#34;color:#ef9f76&#34;&gt;3&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (&lt;span style=&#34;color:#99d1db&#34;&gt;assoc &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;new-map&lt;/span&gt; &lt;span style=&#34;color:#99d1db&#34;&gt;key &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;val&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f2d5cf&#34;&gt;new-map&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#a6d189&#34;&gt;:a&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;:b&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;:c&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;:d&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;-1&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;:e&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;:f&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;23&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; {:b 4, :e 9, :f 23}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;implementing-a-mapping-functiona-idsec-5-namesec-5a&#34;&gt;Implementing a mapping function&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;5&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;6&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;7&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;8&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;mapr&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#99d1db&#34;&gt;reverse &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;reduce &lt;/span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;new-seq&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;elem&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (&lt;span style=&#34;color:#99d1db&#34;&gt;conj &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;new-seq&lt;/span&gt; (&lt;span style=&#34;color:#8caaee&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;elem&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (&lt;span style=&#34;color:#8caaee&#34;&gt;list&lt;/span&gt;) &lt;span style=&#34;color:#f2d5cf&#34;&gt;coll&lt;/span&gt;)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#8caaee&#34;&gt;mapr&lt;/span&gt; (&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;x&lt;/span&gt;] (&lt;span style=&#34;color:#99d1db&#34;&gt;* &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;2&lt;/span&gt;)) [&lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;4&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; (2 4 6 8)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;sort-list-of-list-based-on-sum-of-elementsa-idsec-6-namesec-6a&#34;&gt;Sort list of list based on sum of elements&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;3&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;sort-by &lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;reduce + &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;%&lt;/span&gt;) [&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#ef9f76&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;7&lt;/span&gt;) &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;3&lt;/span&gt;) &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#ef9f76&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;7&lt;/span&gt;)])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; ((1 2 3) (6 5 7) (8 8 7))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;generate-fibonacci-seriesa-idsec-7-namesec-7a&#34;&gt;Generate Fibonacci series&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;10&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; Generate first 10 fibonacci numbers&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#8caaee&#34;&gt;reduce&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[&lt;span style=&#34;color:#f2d5cf&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;b&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#99d1db&#34;&gt;conj &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;a&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;+ &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;last &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;a&lt;/span&gt;) (&lt;span style=&#34;color:#99d1db&#34;&gt;last &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;butlast &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;a&lt;/span&gt;)))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  [&lt;span style=&#34;color:#ef9f76&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#99d1db&#34;&gt;range &lt;/span&gt;&lt;span style=&#34;color:#ef9f76&#34;&gt;8&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;;; [0 1 1 2 3 5 8 13 21]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;finding-factorial&#34;&gt;Finding factorial&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e78284&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;factorial&lt;/span&gt; [&lt;span style=&#34;color:#f2d5cf&#34;&gt;n&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#99d1db&#34;&gt;reduce * &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;range &lt;/span&gt;&lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;inc &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;n&lt;/span&gt;))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;implementing-comp&#34;&gt;Implementing comp&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;3&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;fs&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#ca9ee6&#34;&gt;fn &lt;/span&gt;[&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;xs&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#99d1db&#34;&gt;first &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;reduce &lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;vector &lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;apply &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;%2&lt;/span&gt; &lt;span style=&#34;color:#f2d5cf&#34;&gt;%1&lt;/span&gt;)) &lt;span style=&#34;color:#f2d5cf&#34;&gt;xs&lt;/span&gt; (&lt;span style=&#34;color:#99d1db&#34;&gt;reverse &lt;/span&gt;&lt;span style=&#34;color:#f2d5cf&#34;&gt;fs&lt;/span&gt;)))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Setting up ACL in Mosquitto using Postgres</title>
      <link>http://kirang.in/post/setting-up-acl-in-mosquitto-using-postgres/</link>
      <pubDate>Sat, 23 May 2015 00:00:00 +0530</pubDate>
      <guid>http://kirang.in/post/setting-up-acl-in-mosquitto-using-postgres/</guid>
      <description>&lt;p&gt;Lately, I&amp;rsquo;ve been playing around with Mosquitto and MQTT in&#xA;general. Something that is essential to prevent unauthorized access to&#xA;topics is some sort of an access control mechanism. In this post, I&amp;rsquo;ll&#xA;illustrate the necessary steps for setting up an ACL(Access Control&#xA;List) using Postgres and &lt;a href=&#34;https://github.com/jpmens/mosquitto-auth-plug.git&#34;&gt;mosquitto-auth-plugin&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;install-dependenciesa-idsec-1-namesec-1a&#34;&gt;Install Dependencies&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install libc-ares-dev libcurl4-openssl-dev uuid-dev postgresql libpq-dev git&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;install-mosquittoa-idsec-2-namesec-2a&#34;&gt;Install Mosquitto&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Download Mosquitto from source:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating a Mutable Array data type in sqlalchemy</title>
      <link>http://kirang.in/post/creating-a-mutable-array-data-type-in-sqlalchemy/</link>
      <pubDate>Sat, 09 Aug 2014 00:00:00 +0530</pubDate>
      <guid>http://kirang.in/post/creating-a-mutable-array-data-type-in-sqlalchemy/</guid>
      <description>&lt;p&gt;The problem with using the ARRAY datatype in sqlalchemy is that it&amp;rsquo;s&#xA;immutable. This means it isn&amp;rsquo;t possible to add new data into array once&#xA;it has been initialised. Unfortunately, I couldn&amp;rsquo;t find any&#xA;good solution to create mutable arrays until I came across this snippet&#xA;by Michael Bayer, the author of sqlalchemy himself:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;10&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;11&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;12&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;13&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;14&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;15&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;16&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81c8be&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;sqlalchemy.ext.mutable&lt;/span&gt; &lt;span style=&#34;color:#81c8be&#34;&gt;import&lt;/span&gt; Mutable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81c8be&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;sqlalchemy.dialects.postgresql&lt;/span&gt; &lt;span style=&#34;color:#81c8be&#34;&gt;import&lt;/span&gt; ARRAY&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#e5c890&#34;&gt;MutableList&lt;/span&gt;(Mutable, &lt;span style=&#34;color:#99d1db&#34;&gt;list&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ca9ee6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;append&lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;self&lt;/span&gt;, value):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#99d1db&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#99d1db&#34;&gt;self&lt;/span&gt;, value)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#99d1db&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;changed()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8caaee;font-weight:bold&#34;&gt;@classmethod&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ca9ee6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;coerce&lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;cls&lt;/span&gt;, key, value):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ca9ee6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#99d1db&#34;&gt;isinstance&lt;/span&gt;(value, MutableList):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ca9ee6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#99d1db&#34;&gt;isinstance&lt;/span&gt;(value, &lt;span style=&#34;color:#99d1db&#34;&gt;list&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#ca9ee6&#34;&gt;return&lt;/span&gt; MutableList(value)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ca9ee6&#34;&gt;return&lt;/span&gt; Mutable&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;coerce(key, value)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ca9ee6&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ca9ee6&#34;&gt;return&lt;/span&gt; value&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;What this snippet allows you to do is to extend a list to add mutability&#xA;to it. So, now you can use the class above to create a mutable array&#xA;type like so:&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Unix Philosophy - A Summary</title>
      <link>http://kirang.in/post/the-unix-philosophy-summary/</link>
      <pubDate>Thu, 12 Dec 2013 20:45:00 +0530</pubDate>
      <guid>http://kirang.in/post/the-unix-philosophy-summary/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Rule of Modularity&lt;/strong&gt;: Write simple parts connected by clean&#xA;interfaces.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Rule of Clarity&lt;/strong&gt;: Clarity is better than cleverness.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Rule of Composition&lt;/strong&gt;: Design programs to be connected to other&#xA;programs.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Writing good Classes in Python</title>
      <link>http://kirang.in/post/writing-good-classes-in-python/</link>
      <pubDate>Mon, 02 Dec 2013 08:38:00 +0530</pubDate>
      <guid>http://kirang.in/post/writing-good-classes-in-python/</guid>
      <description>&lt;p&gt;This post is the highlight of Raymond Hettinger&amp;rsquo;s talk &amp;ldquo;&lt;a href=&#34;http://pyvideo.org/video/1779/pythons-class-development-toolkit&#34;&gt;Python&amp;rsquo;s Class&#xA;Development&#xA;Toolkit&lt;/a&gt;&amp;rdquo;&#xA;at PyCon US 2013.&lt;/p&gt;&#xA;&lt;p&gt;Things to keep in mind while writing Classes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Inherit from &lt;code&gt;object()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Instance variables for information unique to an instance&lt;/li&gt;&#xA;&lt;li&gt;Class variables for data shared among all instances&lt;/li&gt;&#xA;&lt;li&gt;Regular methods need self to operate on instance data&lt;/li&gt;&#xA;&lt;li&gt;Class methods implement alternative constructors. They need &lt;code&gt;cls&lt;/code&gt; so&#xA;they can create subclass instances as well&lt;/li&gt;&#xA;&lt;li&gt;Static methods attach functions to classes. They don&amp;rsquo;t need&#xA;either &lt;code&gt;self&lt;/code&gt; or  &lt;code&gt;cls&lt;/code&gt;. Static&#xA;methods improve discoverability and require context to be specified.&lt;/li&gt;&#xA;&lt;li&gt;A &lt;code&gt;property()&lt;/code&gt; lets&#xA;getter and setter methods be invoked automatically by attribute&#xA;access. This allows Python Classes to expose their instance&#xA;variables freely.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;__slots__&lt;/code&gt; variable&#xA;implements Flyweight Design Pattern by supressing instance&#xA;dictionaries.&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;code&gt;__perimeter&lt;/code&gt;&#xA;to preserve namespace when subclassing. The underlying variable name&#xA;changes based on the caller.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This is an example with all the above practices implemented:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up Jenkins as a watchdog for your Python application</title>
      <link>http://kirang.in/post/setting-up-jenkins-as-a-watchdog-for-your-python-application/</link>
      <pubDate>Thu, 28 Nov 2013 20:19:00 +0530</pubDate>
      <guid>http://kirang.in/post/setting-up-jenkins-as-a-watchdog-for-your-python-application/</guid>
      <description>&lt;p&gt;In order to facilitate  an efficient collaboration amongst developer&#xA;teams, it is very important to keep the development workflow as simple&#xA;and straightforward as possible. Version Control is one tool that helps&#xA;with this. Continuous Integration is another one. Below, I&amp;rsquo;ll illustrate&#xA;the steps needed to configure a basic Python application with&#xA;&lt;a href=&#34;http://jenkins-ci.org&#34;&gt;Jenkins&lt;/a&gt;, a CI server that automates a lot of&#xA;the repetitive stuff, so that you can focus on writing code. Well, let&amp;rsquo;s&#xA;get started then.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What makes a great API?</title>
      <link>http://kirang.in/post/what-makes-a-great-api/</link>
      <pubDate>Thu, 07 Nov 2013 22:59:00 +0530</pubDate>
      <guid>http://kirang.in/post/what-makes-a-great-api/</guid>
      <description>&lt;p&gt;We are slowly moving towards a completely api-fied world. All the common&#xA;services that we used to find so hard to deal with a few years back,&#xA;have become super easy thanks to introduction of API&amp;rsquo;s. Today, every&#xA;other person/business out there is developing an API to make an XYZ&#xA;service more awesome (and gain some developer love). Hence, it is&#xA;important to understand the principles behind designing good APIs. In&#xA;this post, I&amp;rsquo;ll highlight a few practices/tips that I&amp;rsquo;ve learnt,&#xA;designing a few and using different API&amp;rsquo;s.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building an open-source Python application the right way</title>
      <link>http://kirang.in/post/building-an-open-source-python-application-the-right-way/</link>
      <pubDate>Mon, 09 Sep 2013 22:44:00 +0530</pubDate>
      <guid>http://kirang.in/post/building-an-open-source-python-application-the-right-way/</guid>
      <description>&lt;p&gt;If you love Python and love open source like I do, you&amp;rsquo;d probably be&#xA;open sourcing something new every day/week/month. Sure that there are&#xA;quite a lot of articles online that tell you the best practices of&#xA;writing Python code, testing, packaging, distributing etc, I haven&amp;rsquo;t&#xA;really found a good article that highlights what are the best&#xA;practices/conventions to be followed while building a full fledged and&#xA;open source Python application. So I decided to write one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Familiarising yourself with a large codebase</title>
      <link>http://kirang.in/post/familiarising-yourself-with-a-large-codebase/</link>
      <pubDate>Fri, 06 Sep 2013 02:56:00 +0530</pubDate>
      <guid>http://kirang.in/post/familiarising-yourself-with-a-large-codebase/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m sure that a lot of developers find it harder to read existing code&#xA;and understand the ideals behind it, rather than writing it from&#xA;scratch, themselves. I too have this same problem, and so started&#xA;looking around online as to how people have dealt with it. I&amp;rsquo;ve compiled&#xA;some good answers from various sources, below:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Try and understand at a high level, what the purpose of the code is, and then identify the key elements/functions that help achieve this purpose&lt;/li&gt;&#xA;&lt;li&gt;Try to read as much design and documentation about the project&#xA;before diving in&lt;/li&gt;&#xA;&lt;li&gt;Try and figure out the relations between various components and then&#xA;draw/visualise an architecture diagram&lt;/li&gt;&#xA;&lt;li&gt;Talk to authors and clarify things with them beforehand&lt;/li&gt;&#xA;&lt;li&gt;Go through unit tests to get a high level overview&lt;/li&gt;&#xA;&lt;li&gt;Start with the entry point in the program. This will in turn point&#xA;to what gets started and sometimes how things are linked.&lt;/li&gt;&#xA;&lt;li&gt;Make small edits or bug fixes, then gradually build up&lt;/li&gt;&#xA;&lt;li&gt;Keep notes. Don&amp;rsquo;t jump in and start developing; it&amp;rsquo;s more valuable&#xA;to spend time understanding than to generate messy or inappropriate&#xA;code.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Hope you find success after following the above tips :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is Python Month?</title>
      <link>http://kirang.in/post/what-is-python-month/</link>
      <pubDate>Tue, 23 Jul 2013 17:02:00 +0530</pubDate>
      <guid>http://kirang.in/post/what-is-python-month/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://in.pycon.org&#34;&gt;PyCon India&lt;/a&gt;,&lt;/strong&gt; the premier conference in India&#xA;on using and developing the Python programming language is conducted&#xA;annually by the Python developer community, and represented by the&#xA;Python Software Society of India. The conference attracts the best&#xA;Python programmers across the country and abroad.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JVM Profiling Disclosures</title>
      <link>http://kirang.in/post/jvm-profiling-disclosures/</link>
      <pubDate>Wed, 22 May 2013 02:55:00 +0530</pubDate>
      <guid>http://kirang.in/post/jvm-profiling-disclosures/</guid>
      <description>&lt;p&gt;Well, I’ve never actually given importance to the term ”profiling” till&#xA;a few days ago. The real deal was that I was just too lazy to actually&#xA;run a profiler and then to try interpret the stats and hopefully find&#xA;the bottleneck in the code. So to avoid all this hassle, I tried to be&#xA;careful while writing code to make sure I don’t leave any open doors for&#xA;memory leaks or poor CPU utilization.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Type and Object in Python</title>
      <link>http://kirang.in/post/type-and-object-in-python/</link>
      <pubDate>Wed, 22 May 2013 01:59:00 +0530</pubDate>
      <guid>http://kirang.in/post/type-and-object-in-python/</guid>
      <description>&lt;p&gt;Recently I stumbled across an article talking about the importance of&#xA;understanding type and object in Python, so thought of writing a small&#xA;post on it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Sublime workflow</title>
      <link>http://kirang.in/post/my-sublime-workflow/</link>
      <pubDate>Sat, 04 May 2013 13:44:00 +0530</pubDate>
      <guid>http://kirang.in/post/my-sublime-workflow/</guid>
      <description>&lt;p&gt;The settings I use for &lt;a href=&#34;http://www.sublimetext.com/&#34;&gt;Sublime Text&#xA;2&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;10&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;11&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;12&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;13&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;14&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;15&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;16&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;17&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;18&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;19&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;20&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;21&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;22&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;23&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;24&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;25&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;26&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;27&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;28&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;29&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;30&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;31&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;32&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;33&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;34&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;35&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;36&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;37&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;38&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;color_scheme&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;Packages/User/Tomorrow-Night.tmTheme&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;detect_slow_plugins&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;draw_white_space&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;all&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;find_selected_text&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;fold_buttons&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;folder_exclude_patterns&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;.svn&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;.git&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;.hg&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;CVS&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;_build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;dist&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;site&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;font_face&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;Ubuntu Mono&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;font_options&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;subpixel_antialias&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;font_size&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;13&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;highlight_line&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;ignored_packages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;Vintage&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;rulers&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ef9f76&#34;&gt;80&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ef9f76&#34;&gt;100&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;soda_classic_tabs&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;theme&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;Soda Dark.sublime-theme&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;translate_tabs_to_spaces&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;trim_trailing_white_space_on_save&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;plugins&#34;&gt;Plugins&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Emmet-Sublime&lt;/li&gt;&#xA;&lt;li&gt;SublimeLinter&lt;/li&gt;&#xA;&lt;li&gt;SublimeREPL&lt;/li&gt;&#xA;&lt;li&gt;SideBarEnhancements&lt;/li&gt;&#xA;&lt;li&gt;Markdown Preview&lt;/li&gt;&#xA;&lt;li&gt;Git&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;others&#34;&gt;Others&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/chriskempson/tomorrow-theme&#34;&gt;Tomorrow-Night color&#xA;scheme&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/buymeasoda/soda-theme/&#34;&gt;Soda Dark theme&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
