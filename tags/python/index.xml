<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Kiran Gangadharan</title>
    <link>http://kirang.in/tags/python/</link>
    <description>Recent content in Python on Kiran Gangadharan</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Nov 2015 00:00:00 +0530</lastBuildDate>
    <atom:link href="http://kirang.in/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fetching data with a raw SQL query in SQLAlchemy</title>
      <link>http://kirang.in/post/fetching-data-with-raw-sql-query-in-sqlalchemy/</link>
      <pubDate>Sun, 22 Nov 2015 00:00:00 +0530</pubDate>
      <guid>http://kirang.in/post/fetching-data-with-raw-sql-query-in-sqlalchemy/</guid>
      <description>&lt;p&gt;The following is a sane way of fetching data using a raw SQL query in&#xA;SQLAlchemy:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;10&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;11&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;12&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;13&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;14&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;15&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;16&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;query &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#39;select * from books where author=:author&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81c8be&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;sqlalchemy&lt;/span&gt; &lt;span style=&#34;color:#81c8be&#34;&gt;import&lt;/span&gt; text&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt; yoursession&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;execute(text(query), {&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#39;author&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#39;Neil Degrasse Tyson&amp;#39;&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81c8be&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;collections&lt;/span&gt; &lt;span style=&#34;color:#81c8be&#34;&gt;import&lt;/span&gt; namedtuple&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Book &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt; namedtuple(&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#39;Book&amp;#39;&lt;/span&gt;, result&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;keys())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;# Create a namedtuple for each row&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;books &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt; [Record(&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;*&lt;/span&gt;r) &lt;span style=&#34;color:#ca9ee6&#34;&gt;for&lt;/span&gt; r &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;in&lt;/span&gt; res&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;fetchall()]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;# Using namedtuple allows you to access attributes using the&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;# dot operator instead of relying on indexes&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;in&lt;/span&gt; books:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#99d1db&#34;&gt;print&lt;/span&gt;(book&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;name, book&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;author)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Creating a Mutable Array data type in sqlalchemy</title>
      <link>http://kirang.in/post/creating-a-mutable-array-data-type-in-sqlalchemy/</link>
      <pubDate>Sat, 09 Aug 2014 00:00:00 +0530</pubDate>
      <guid>http://kirang.in/post/creating-a-mutable-array-data-type-in-sqlalchemy/</guid>
      <description>&lt;p&gt;The problem with using the ARRAY datatype in sqlalchemy is that it&amp;rsquo;s&#xA;immutable. This means it isn&amp;rsquo;t possible to add new data into array once&#xA;it has been initialised. Unfortunately, I couldn&amp;rsquo;t find any&#xA;good solution to create mutable arrays until I came across this snippet&#xA;by Michael Bayer, the author of sqlalchemy himself:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;10&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;11&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;12&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;13&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;14&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;15&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;16&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81c8be&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;sqlalchemy.ext.mutable&lt;/span&gt; &lt;span style=&#34;color:#81c8be&#34;&gt;import&lt;/span&gt; Mutable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81c8be&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;sqlalchemy.dialects.postgresql&lt;/span&gt; &lt;span style=&#34;color:#81c8be&#34;&gt;import&lt;/span&gt; ARRAY&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#e5c890&#34;&gt;MutableList&lt;/span&gt;(Mutable, &lt;span style=&#34;color:#99d1db&#34;&gt;list&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ca9ee6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;append&lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;self&lt;/span&gt;, value):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#99d1db&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#99d1db&#34;&gt;self&lt;/span&gt;, value)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#99d1db&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;changed()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8caaee;font-weight:bold&#34;&gt;@classmethod&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ca9ee6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;coerce&lt;/span&gt;(&lt;span style=&#34;color:#99d1db&#34;&gt;cls&lt;/span&gt;, key, value):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ca9ee6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#99d1db&#34;&gt;isinstance&lt;/span&gt;(value, MutableList):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ca9ee6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#99d1db&#34;&gt;isinstance&lt;/span&gt;(value, &lt;span style=&#34;color:#99d1db&#34;&gt;list&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#ca9ee6&#34;&gt;return&lt;/span&gt; MutableList(value)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ca9ee6&#34;&gt;return&lt;/span&gt; Mutable&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;coerce(key, value)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ca9ee6&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ca9ee6&#34;&gt;return&lt;/span&gt; value&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;What this snippet allows you to do is to extend a list to add mutability&#xA;to it. So, now you can use the class above to create a mutable array&#xA;type like so:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dealing with ISO 8601 dates in Python</title>
      <link>http://kirang.in/post/dealing-with-iso-8601-dates-in-python/</link>
      <pubDate>Thu, 10 Apr 2014 17:55:00 +0530</pubDate>
      <guid>http://kirang.in/post/dealing-with-iso-8601-dates-in-python/</guid>
      <description>&lt;p&gt;For those who don&amp;rsquo;t know what the ISO 8601 format is, you can read about&#xA;it &lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_8601&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installing PIL on Mac OSX Mavericks</title>
      <link>http://kirang.in/post/installing-pil-on-mac-osx-mavericks/</link>
      <pubDate>Mon, 09 Dec 2013 12:13:00 +0530</pubDate>
      <guid>http://kirang.in/post/installing-pil-on-mac-osx-mavericks/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;ve probably tried installing &lt;a href=&#34;http://en.wikipedia.org/wiki/Python_Imaging_Library&#34;&gt;PIL(Python Imaging&#xA;Library)&lt;/a&gt; on OSX&#xA;Mavericks(version 10.9), you&amp;rsquo;re likely to have failed in doing so. After&#xA;searching for a while, I found the solution that worked for me.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writing good Classes in Python</title>
      <link>http://kirang.in/post/writing-good-classes-in-python/</link>
      <pubDate>Mon, 02 Dec 2013 08:38:00 +0530</pubDate>
      <guid>http://kirang.in/post/writing-good-classes-in-python/</guid>
      <description>&lt;p&gt;This post is the highlight of Raymond Hettinger&amp;rsquo;s talk &amp;ldquo;&lt;a href=&#34;http://pyvideo.org/video/1779/pythons-class-development-toolkit&#34;&gt;Python&amp;rsquo;s Class&#xA;Development&#xA;Toolkit&lt;/a&gt;&amp;rdquo;&#xA;at PyCon US 2013.&lt;/p&gt;&#xA;&lt;p&gt;Things to keep in mind while writing Classes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Inherit from &lt;code&gt;object()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Instance variables for information unique to an instance&lt;/li&gt;&#xA;&lt;li&gt;Class variables for data shared among all instances&lt;/li&gt;&#xA;&lt;li&gt;Regular methods need self to operate on instance data&lt;/li&gt;&#xA;&lt;li&gt;Class methods implement alternative constructors. They need &lt;code&gt;cls&lt;/code&gt; so&#xA;they can create subclass instances as well&lt;/li&gt;&#xA;&lt;li&gt;Static methods attach functions to classes. They don&amp;rsquo;t need&#xA;either &lt;code&gt;self&lt;/code&gt; or  &lt;code&gt;cls&lt;/code&gt;. Static&#xA;methods improve discoverability and require context to be specified.&lt;/li&gt;&#xA;&lt;li&gt;A &lt;code&gt;property()&lt;/code&gt; lets&#xA;getter and setter methods be invoked automatically by attribute&#xA;access. This allows Python Classes to expose their instance&#xA;variables freely.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;__slots__&lt;/code&gt; variable&#xA;implements Flyweight Design Pattern by supressing instance&#xA;dictionaries.&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;code&gt;__perimeter&lt;/code&gt;&#xA;to preserve namespace when subclassing. The underlying variable name&#xA;changes based on the caller.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This is an example with all the above practices implemented:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up Jenkins as a watchdog for your Python application</title>
      <link>http://kirang.in/post/setting-up-jenkins-as-a-watchdog-for-your-python-application/</link>
      <pubDate>Thu, 28 Nov 2013 20:19:00 +0530</pubDate>
      <guid>http://kirang.in/post/setting-up-jenkins-as-a-watchdog-for-your-python-application/</guid>
      <description>&lt;p&gt;In order to facilitate  an efficient collaboration amongst developer&#xA;teams, it is very important to keep the development workflow as simple&#xA;and straightforward as possible. Version Control is one tool that helps&#xA;with this. Continuous Integration is another one. Below, I&amp;rsquo;ll illustrate&#xA;the steps needed to configure a basic Python application with&#xA;&lt;a href=&#34;http://jenkins-ci.org&#34;&gt;Jenkins&lt;/a&gt;, a CI server that automates a lot of&#xA;the repetitive stuff, so that you can focus on writing code. Well, let&amp;rsquo;s&#xA;get started then.&lt;/p&gt;</description>
    </item>
    <item>
      <title>An Eventful September</title>
      <link>http://kirang.in/post/an-eventful-september/</link>
      <pubDate>Thu, 03 Oct 2013 18:51:00 +0530</pubDate>
      <guid>http://kirang.in/post/an-eventful-september/</guid>
      <description>&lt;p&gt;Looking back at September, it&amp;rsquo;s probably been one of the most happening&#xA;months for me in this year. Well, at least technically. I will try and&#xA;recollect some bits from the eventlog here.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building an open-source Python application the right way</title>
      <link>http://kirang.in/post/building-an-open-source-python-application-the-right-way/</link>
      <pubDate>Mon, 09 Sep 2013 22:44:00 +0530</pubDate>
      <guid>http://kirang.in/post/building-an-open-source-python-application-the-right-way/</guid>
      <description>&lt;p&gt;If you love Python and love open source like I do, you&amp;rsquo;d probably be&#xA;open sourcing something new every day/week/month. Sure that there are&#xA;quite a lot of articles online that tell you the best practices of&#xA;writing Python code, testing, packaging, distributing etc, I haven&amp;rsquo;t&#xA;really found a good article that highlights what are the best&#xA;practices/conventions to be followed while building a full fledged and&#xA;open source Python application. So I decided to write one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploying a Django application on Elastic Beanstalk using S3</title>
      <link>http://kirang.in/post/deploying-a-django-application-on-elastic-beanstalk-using-s3/</link>
      <pubDate>Tue, 20 Aug 2013 06:20:00 +0530</pubDate>
      <guid>http://kirang.in/post/deploying-a-django-application-on-elastic-beanstalk-using-s3/</guid>
      <description>&lt;p&gt;This post was born out of the pain to get a sample django application,&#xA;configured properly, using Amazon S3 for serving static files, to  run&#xA;on AWS Elastic Beanstalk. I encountered many errors on the way, but&#xA;finally managed to get a full fledged application running successfully.&#xA;I am gonna try and highlight the key steps here to help you get your&#xA;project up and running in no time.&lt;/p&gt;&#xA;&lt;p&gt;First, create a sample Django project&#xA;and a AWS Elastic Beanstalk environment for your application, as per the&#xA;instructions provided in the &lt;a href=&#34;http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_Python_django.html&#34;&gt;official AWS&#xA;documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is Python Month?</title>
      <link>http://kirang.in/post/what-is-python-month/</link>
      <pubDate>Tue, 23 Jul 2013 17:02:00 +0530</pubDate>
      <guid>http://kirang.in/post/what-is-python-month/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://in.pycon.org&#34;&gt;PyCon India&lt;/a&gt;,&lt;/strong&gt; the premier conference in India&#xA;on using and developing the Python programming language is conducted&#xA;annually by the Python developer community, and represented by the&#xA;Python Software Society of India. The conference attracts the best&#xA;Python programmers across the country and abroad.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installing pylibmc in ubuntu</title>
      <link>http://kirang.in/post/installing-pylibmc-in-ubuntu/</link>
      <pubDate>Wed, 22 May 2013 02:16:00 +0530</pubDate>
      <guid>http://kirang.in/post/installing-pylibmc-in-ubuntu/</guid>
      <description>&lt;p&gt;Before you install Pylibmc on your machine, there are a few dependencies&#xA;that you need to take care of, so as to ensure a successful&#xA;installation.&lt;/p&gt;&#xA;&lt;p&gt;Install python-dev&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install python-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Install libmemcached&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install libmemcached-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Now you can successfully install pylibmc using pip&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#838ba7&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pip install pylibmc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Type and Object in Python</title>
      <link>http://kirang.in/post/type-and-object-in-python/</link>
      <pubDate>Wed, 22 May 2013 01:59:00 +0530</pubDate>
      <guid>http://kirang.in/post/type-and-object-in-python/</guid>
      <description>&lt;p&gt;Recently I stumbled across an article talking about the importance of&#xA;understanding type and object in Python, so thought of writing a small&#xA;post on it.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
