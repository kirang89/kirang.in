<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Open-Source on Kiran Gangadharan</title>
    <link>http://kirang.in/tags/open-source/</link>
    <description>Recent content in Open-Source on Kiran Gangadharan</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Oct 2013 18:51:00 +0530</lastBuildDate>
    <atom:link href="http://kirang.in/tags/open-source/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>An Eventful September</title>
      <link>http://kirang.in/post/an-eventful-september/</link>
      <pubDate>Thu, 03 Oct 2013 18:51:00 +0530</pubDate>
      <guid>http://kirang.in/post/an-eventful-september/</guid>
      <description>&lt;p&gt;Looking back at September, it&amp;rsquo;s probably been one of the most happening&#xA;months for me in this year. Well, at least technically. I will try and&#xA;recollect some bits from the eventlog here.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building an open-source Python application the right way</title>
      <link>http://kirang.in/post/building-an-open-source-python-application-the-right-way/</link>
      <pubDate>Mon, 09 Sep 2013 22:44:00 +0530</pubDate>
      <guid>http://kirang.in/post/building-an-open-source-python-application-the-right-way/</guid>
      <description>&lt;p&gt;If you love Python and love open source like I do, you&amp;rsquo;d probably be&#xA;open sourcing something new every day/week/month. Sure that there are&#xA;quite a lot of articles online that tell you the best practices of&#xA;writing Python code, testing, packaging, distributing etc, I haven&amp;rsquo;t&#xA;really found a good article that highlights what are the best&#xA;practices/conventions to be followed while building a full fledged and&#xA;open source Python application. So I decided to write one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Familiarising yourself with a large codebase</title>
      <link>http://kirang.in/post/familiarising-yourself-with-a-large-codebase/</link>
      <pubDate>Fri, 06 Sep 2013 02:56:00 +0530</pubDate>
      <guid>http://kirang.in/post/familiarising-yourself-with-a-large-codebase/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m sure that a lot of developers find it harder to read existing code&#xA;and understand the ideals behind it, rather than writing it from&#xA;scratch, themselves. I too have this same problem, and so started&#xA;looking around online as to how people have dealt with it. I&amp;rsquo;ve compiled&#xA;some good answers from various sources, below:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Try and understand at a high level, what the purpose of the code is, and then identify the key elements/functions that help achieve this purpose&lt;/li&gt;&#xA;&lt;li&gt;Try to read as much design and documentation about the project&#xA;before diving in&lt;/li&gt;&#xA;&lt;li&gt;Try and figure out the relations between various components and then&#xA;draw/visualise an architecture diagram&lt;/li&gt;&#xA;&lt;li&gt;Talk to authors and clarify things with them beforehand&lt;/li&gt;&#xA;&lt;li&gt;Go through unit tests to get a high level overview&lt;/li&gt;&#xA;&lt;li&gt;Start with the entry point in the program. This will in turn point&#xA;to what gets started and sometimes how things are linked.&lt;/li&gt;&#xA;&lt;li&gt;Make small edits or bug fixes, then gradually build up&lt;/li&gt;&#xA;&lt;li&gt;Keep notes. Don&amp;rsquo;t jump in and start developing; it&amp;rsquo;s more valuable&#xA;to spend time understanding than to generate messy or inappropriate&#xA;code.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Hope you find success after following the above tips :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Make your open source project documentation suck less</title>
      <link>http://kirang.in/post/make-your-open-source-project-documentation-suck-less/</link>
      <pubDate>Tue, 07 May 2013 16:55:00 +0530</pubDate>
      <guid>http://kirang.in/post/make-your-open-source-project-documentation-suck-less/</guid>
      <description>&lt;p&gt;I just stumbled into this talk about documentation by &lt;a href=&#34;https://people.djangoproject.com/jacobian/&#34;&gt;Jacob-Kaplan&#xA;Moss&lt;/a&gt; and it was really an&#xA;insightful look into how one must design the documentation for an open&#xA;source project. Below is the gist of his talk:&lt;/p&gt;&#xA;&lt;h2 id=&#34;documentation-is-communication&#34;&gt;Documentation is communication&lt;/h2&gt;&#xA;&lt;p&gt;This is the single most important point that you need to understand.&#xA;Documentation is not just written as a guide, but as a means to&#xA;communicate with various developers and users across the globe. And if&#xA;you think about it, your project is close to worthless, if you cannot&#xA;communicate effectively about it to your users.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
